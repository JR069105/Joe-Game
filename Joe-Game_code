import pygame, sys, time, random
from pygame.locals import *

#screen size
screenx = 800
screeny = 600

#image size
imgsizex = 175
imgsizey = 150

#image coordinates
imgy = screeny/2 - imgsizey/2
imgx = screenx/2 - imgsizey/2

#Stuff for sprites and background??
speed = 25
laserGO = False
q=2000
laserx = 1000
lasery = 1000
Clock = pygame.time.Clock()
FPS = 20
screen = pygame.display.set_mode((screenx, screeny), 0, 32)
pygame.display.set_caption("Joe Game Time")
img = pygame.transform.scale(pygame.image.load("spaceG(1).png"), (imgsizex, imgsizey))
RedDeath = pygame.transform.scale(pygame.image.load("RedDeath.png"), (screenx, screeny))
bg = pygame.transform.scale(pygame.image.load("pygame_Bground.png"), (screenx, screeny))
logo =pygame.transform.scale(pygame.image.load("Joe_Game.png"), (screenx, screeny))
badguy = pygame.transform.scale(pygame.image.load("AngryCube.png"), (int(imgsizex/2), int(imgsizey/2)))
n = 0
moveybad = 100
movexbad = screenx-100
life = 3
Tsize=1

#Animation
walkRight = [pygame.transform.scale(pygame.image.load("spaceG(1).png"), (imgsizex, imgsizey)), pygame.transform.scale(pygame.image.load("spaceG(2).png"), (imgsizex, imgsizey)), pygame.transform.scale(pygame.image.load("spaceG(3).png"), (imgsizex, imgsizey)), pygame.transform.scale(pygame.image.load("spaceG(2).png"), (imgsizex, imgsizey)), ]
walkLeft = [pygame.transform.scale(pygame.image.load("spaceF(1).png"), (imgsizex, imgsizey)), pygame.transform.scale(pygame.image.load("spaceF(2).png"), (imgsizex, imgsizey)), pygame.transform.scale(pygame.image.load("spaceF(3).png"), (imgsizex, imgsizey)), pygame.transform.scale(pygame.image.load("spaceF(2).png"), (imgsizex, imgsizey)), ]
walkCount = 0
right = True
left = False

#Music and logo
screen.blit(logo, (25, 0))
pygame.display.update()
pygame.display.flip()
pygame.mixer.init(47000)
pygame.mixer.music.load("80_pygame.mp3")
pygame.mixer.music.play(-217, 1.75)
time.sleep(2.4)
pygame.init() 

#GAME loop
while True:
  if life > 0:
    #Reseting variables go here:
    if q > screenx*1.05:
      L_pos = True
      R_pos = True
    screen.blit(bg, (0, 0))
    runANI = False
    both = False
    
    #KEY MOVEMENT while jump, and quit 
    
    #Giving up on life code:
    for event in pygame.event.get():
      if event.type==QUIT:
            pygame.quit()
            sys.exit()
      #Jump (YES) code      
      if event.type == KEYDOWN:
        if (event.key == K_UP):
          if imgy+50 > screeny - imgsizey:
            #Jump up legs in animation
            if left == True:
              img = pygame.transform.scale(pygame.image.load("spaceF(3).png"), (imgsizex, imgsizey))
            if right == True:
              img = pygame.transform.scale(pygame.image.load("spaceG(3).png"), (imgsizex, imgsizey))
            #Jump up moment
            for i in range(10):
                if R_pos == True:
                  pygame.draw.circle(screen, (0,200,255), (laserx+int(q), lasery), 30, 30)
                if L_pos == True:
                  pygame.draw.circle(screen, (0,200,255), (laserx-150-int(q), lasery), 30, 30)
                q+=speed+5/10
                imgy-=imgsizey/4
                pygame.display.update()
                time.sleep(0.01)
                #Left or right in jump mode
                keys_pressed = pygame.key.get_pressed()
                if keys_pressed[pygame.K_LEFT]:
                    imgx -= speed
                if keys_pressed[pygame.K_RIGHT]:
                    imgx += speed
                if imgx < 0:
                  imgx = imgx+speed
                if imgx+imgsizex > screenx:
                  imgx = imgx-speed
                #Displaying images in jump so they dont disapeer
                screen.blit(bg, (0, 0))
                screen.blit(img, (imgx, imgy))
                screen.blit(badguy, (movexbad, moveybad))
        #Wait Until man is touching ground 
        if (event.key == K_SPACE) and q > screenx*1.05:
          laserGO = True
          q=0
          laserx = int(imgx)+imgsizex
          lasery = int(imgy)+70
    keys_pressed = pygame.key.get_pressed()
    #STOP, dont press both keys at once code:
    if keys_pressed[pygame.K_LEFT] and keys_pressed[pygame.K_RIGHT]:
        both = True
    #Left Movement
    if keys_pressed[pygame.K_LEFT] and both == False:
        left = True
        right = False
        imgx -= speed
        img = pygame.transform.scale(pygame.image.load("spaceF(1).png"), (imgsizex, imgsizey))
        screen.blit(walkLeft[walkCount], (imgx,imgy))
        runANI = True
        if walkCount < 3:
          walkCount += 1
        else:
          walkCount = 0
    #Right Movement
    if keys_pressed[pygame.K_RIGHT] and both == False:
        right = True
        left = False
        imgx += speed
        img = pygame.transform.scale(pygame.image.load("spaceG(1).png"), (imgsizex, imgsizey))
        screen.blit(walkRight[walkCount], (imgx,imgy))
        runANI = True
        if walkCount < 3:
          walkCount += 1
        else:
          walkCount = 0
    #Wall barriers  and gravity for human
    if imgx < 0:
      imgx = imgx+speed
    if imgx+imgsizex > screenx:
      imgx = imgx-speed
    if imgy < 0:
      imgy = imgy+speed
    if imgy+imgsizey > screeny-40:
      imgy = imgy-speed
    #Ez gravity
    imgy += speed
    #laser postion if standstill
    if runANI == False:
      screen.blit(img, (imgx, imgy))
    if laserGO == True:
      if right == True and left == False:
        if R_pos == True:
          pygame.draw.circle(screen, (0,200,255), (laserx+int(q), lasery), 30, 30)
          q+=speed+5
          L_pos = False
        else:
          pygame.draw.circle(screen, (0,200,255), (laserx-150-int(q), lasery), 30, 30)
          q+=speed+5
      if left == True and right == False:
        if L_pos == True:
          pygame.draw.circle(screen, (0,200,255), (laserx-150-int(q), lasery), 30, 30)
          q+=speed+5
          R_pos = False
        else:
          pygame.draw.circle(screen, (0,200,255), (laserx+int(q), lasery), 30, 30)
          q+=speed+5
    #BadGuy movement
    if n == 0:
      Yrandombad = random.randint(50, screeny-100)
      Xrandombad = random.randint(50, screenx-100)
    n+=FPS  
    if n > FPS*40:
      if Yrandombad > moveybad:
        moveybad += Yrandombad/FPS
        if moveybad >= Yrandombad:
          n=0
      else:
        moveybad -= Yrandombad/FPS
        if moveybad <= Yrandombad:
          n=0
      
      if Xrandombad > movexbad:
        movexbad += Xrandombad/FPS
        if movexbad >= Xrandombad:
          n=0
      else:
        movexbad -= Xrandombad/FPS
        if movexbad <= Xrandombad:
          n=0
    #killing mechanism
    if movexbad > imgx and imgx + imgsizey > movexbad and moveybad > imgy and imgy + imgsizey > moveybad:
      life-=1
      screen.blit(RedDeath, (0, 0))
    #Display stuff
    screen.blit(badguy, (movexbad, moveybad))
    pygame.display.update()
    pygame.display.flip()
    Clock.tick(FPS)
  else:
    #End Game text-Deth
    if Tsize <= 100:
      Tsize+=2
    font =  pygame.font.SysFont('(Times)', Tsize) 
    text = font.render('YOU DIED!', True, (250, 30, 20), (0, 0, 0) ) 
    textRect = text.get_rect()  
    textRect.center = (screenx // 2, screeny // 2) 
    screen.fill((0,0,0))
    screen.blit(text, textRect) 
    pygame.display.update()
    pygame.display.flip()
    Clock.tick(FPS)
    
    
